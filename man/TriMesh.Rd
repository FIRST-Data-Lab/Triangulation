% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TriMesh.R
\name{TriMesh}
\alias{TriMesh}
\title{Mesh generator and Delaunay triangulator for 2D/3D Domains}
\usage{
TriMesh(bdy, n, pt = NULL, holes = NULL)
}
\arguments{
\item{bdy}{A two by \code{N} matrix which indicates the outer boundry points of a 2D region.}

\item{n}{An integer parameter controlling the fineness of the triangulation
and subsequent triangulation. As n increases the fineness increases. Usually, \code{n = 8} seems to be a
good choice.}

\item{holes}{A list of vertices that are the inner boundary points,
default set to '\code{NULL}' if there is no holes.}
}
\value{
\item{V}{an \code{N} by two matrix that lists vertices with the \code{i}th
row storing in Cartesian coordinates for the
\code{i}th vertex. \code{N} is the number of vertices.}
\item{Tr}{a \code{K} by three matrix that each row represents one triangle.
All the elements are the integers that stand for the indices of vertices in \code{V}.}
}
\description{
This function triangulates the polygonal domain by using Delaunay Triangulation.
}
\details{
In the function, we firstly get grid points inside and on the boundary of
the polygon with extreme points \code{bdy} and interior holes defined by \code{holes}. Then delaunay triangulation
is used to generate triangulations by using the grid points.
And lastly we delete triangles within the holes or outside the boundary of the region.
}
\examples{
# rectangular domain
bb = rbind(c(0, 0), c(1, 0), c(1, 1), c(0, 1))
VT = TriMesh(bb, 3)
typeof(VT$V)
typeof(VT$Tr)

# irregular domain
data("horseshoe")
TriMesh(hs, n = 9)

pt = rbind(c(-0.475, -0.5), c(0.020, -0.5), c(0.435, -0.5), c(0.890, -0.5),
c(1.345, -0.5), c(1.800, -0.5), c(2.255, -0.5), c(2.710, -0.5), c(3.165, -0.5),
c(-0.475, 0.5), c(0.020, 0.5), c(0.435, 0.5), c(0.890, 0.5), c(1.345, 0.5),
c(1.800, 0.5), c(2.255, 0.5), c(2.710, 0.5), c(3.165, 0.5))
VT = TriMesh(hs, n = 4, pt = pt)
lines(hs, lwd = 1)
points(pt, pch = 20, col = 4)

data("shape")
TriMesh(shape, 15)

data("weird")
TriMesh(weird, 30)

# region with holes
data("BMP")
TriMesh(BMP$bound, 25, holes = list(as.matrix(BMP$H1), as.matrix(BMP$H2)))

data("mymontreal")
TriMesh(mymontreal$bound, 25, holes = list(mymontreal$H1, mymontreal$H2))
}
